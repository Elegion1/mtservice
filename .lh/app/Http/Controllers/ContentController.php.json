{
    "sourceFile": "app/Http/Controllers/ContentController.php",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 25,
            "patches": [
                {
                    "date": 1719405044352,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1719405058595,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,13 +57,17 @@\n \n     /**\n      * Remove the specified resource from storage.\n      */\n-    public function destroy(Content $content)\n+    public function destroy(Excursion $excursion)\n     {\n-        //\n+        foreach ($excursion->images as $image) {\n+            Storage::disk('public')->delete($image->path);\n+            $image->delete();\n+        }\n+        $excursion->delete();\n+        return redirect()->route('dashboard.excursion')->with('success', 'Escursione eliminata con successo.');\n     }\n-\n     public function deleteImage($id)\n     {\n         $image = Image::find($id);\n \n"
                },
                {
                    "date": 1719405065325,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,17 +57,18 @@\n \n     /**\n      * Remove the specified resource from storage.\n      */\n-    public function destroy(Excursion $excursion)\n+    public function destroy(Content $excursion)\n     {\n         foreach ($excursion->images as $image) {\n             Storage::disk('public')->delete($image->path);\n             $image->delete();\n         }\n         $excursion->delete();\n         return redirect()->route('dashboard.excursion')->with('success', 'Escursione eliminata con successo.');\n     }\n+\n     public function deleteImage($id)\n     {\n         $image = Image::find($id);\n \n"
                },
                {
                    "date": 1719405070708,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,9 +57,9 @@\n \n     /**\n      * Remove the specified resource from storage.\n      */\n-    public function destroy(Content $excursion)\n+    public function destroy(Content $content)\n     {\n         foreach ($excursion->images as $image) {\n             Storage::disk('public')->delete($image->path);\n             $image->delete();\n"
                },
                {
                    "date": 1719405077250,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,8 +3,9 @@\n namespace App\\Http\\Controllers;\n \n use App\\Models\\Content;\n use Illuminate\\Http\\Request;\n+use Illuminate\\Support\\Facades\\Storage;\n \n class ContentController extends Controller\n {\n     /**\n@@ -59,9 +60,9 @@\n      * Remove the specified resource from storage.\n      */\n     public function destroy(Content $content)\n     {\n-        foreach ($excursion->images as $image) {\n+        foreach ($content->images as $image) {\n             Storage::disk('public')->delete($image->path);\n             $image->delete();\n         }\n         $excursion->delete();\n"
                },
                {
                    "date": 1719405084296,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,10 +64,10 @@\n         foreach ($content->images as $image) {\n             Storage::disk('public')->delete($image->path);\n             $image->delete();\n         }\n-        $excursion->delete();\n-        return redirect()->route('dashboard.excursion')->with('success', 'Escursione eliminata con successo.');\n+        $content->delete();\n+        return redirect()->route('dashboard.content')->with('success', 'Escursione eliminata con successo.');\n     }\n \n     public function deleteImage($id)\n     {\n"
                },
                {
                    "date": 1719405094966,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,9 @@\n <?php\n \n namespace App\\Http\\Controllers;\n \n+use App\\Models\\Image;\n use App\\Models\\Content;\n use Illuminate\\Http\\Request;\n use Illuminate\\Support\\Facades\\Storage;\n \n@@ -65,9 +66,9 @@\n             Storage::disk('public')->delete($image->path);\n             $image->delete();\n         }\n         $content->delete();\n-        return redirect()->route('dashboard.content')->with('success', 'Escursione eliminata con successo.');\n+        return redirect()->route('dashboard.content')->with('success', 'Contenuto eliminata con successo.');\n     }\n \n     public function deleteImage($id)\n     {\n"
                },
                {
                    "date": 1719405738249,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,86 @@\n+<?php\n+\n+namespace App\\Http\\Controllers;\n+\n+use App\\Models\\Image;\n+use App\\Models\\Content;\n+use Illuminate\\Http\\Request;\n+use Illuminate\\Support\\Facades\\Storage;\n+\n+class ContentController extends Controller\n+{\n+    /**\n+     * Display a listing of the resource.\n+     */\n+    public function index()\n+    {\n+        $services = Service::with('images')->get(); // Carica anche le immagini associate\n+        return view('dashboard.service', compact('services'));\n+    }\n+\n+    /**\n+     * Show the form for creating a new resource.\n+     */\n+    public function create()\n+    {\n+        //\n+    }\n+\n+    /**\n+     * Store a newly created resource in storage.\n+     */\n+    public function store(Request $request)\n+    {\n+        //\n+    }\n+\n+    /**\n+     * Display the specified resource.\n+     */\n+    public function show(Content $content)\n+    {\n+        //\n+    }\n+\n+    /**\n+     * Show the form for editing the specified resource.\n+     */\n+    public function edit(Content $content)\n+    {\n+        //\n+    }\n+\n+    /**\n+     * Update the specified resource in storage.\n+     */\n+    public function update(Request $request, Content $content)\n+    {\n+        //\n+    }\n+\n+    /**\n+     * Remove the specified resource from storage.\n+     */\n+    public function destroy(Content $content)\n+    {\n+        foreach ($content->images as $image) {\n+            Storage::disk('public')->delete($image->path);\n+            $image->delete();\n+        }\n+        $content->delete();\n+        return redirect()->route('dashboard.content')->with('success', 'Contenuto eliminata con successo.');\n+    }\n+\n+    public function deleteImage($id)\n+    {\n+        $image = Image::find($id);\n+\n+        if ($image) {\n+            Storage::disk('public')->delete($image->path);\n+            $image->delete();\n+            return response()->json(['success' => true]);\n+        }\n+\n+        return response()->json(['success' => false, 'error' => 'Immagine non trovata'], 404);\n+    }\n+}\n"
                },
                {
                    "date": 1719405744179,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n      * Display a listing of the resource.\n      */\n     public function index()\n     {\n-        $services = Service::with('images')->get(); // Carica anche le immagini associate\n+        $conten = Service::with('images')->get(); // Carica anche le immagini associate\n         return view('dashboard.service', compact('services'));\n     }\n \n     /**\n@@ -83,89 +83,4 @@\n \n         return response()->json(['success' => false, 'error' => 'Immagine non trovata'], 404);\n     }\n }\n-<?php\n-\n-namespace App\\Http\\Controllers;\n-\n-use App\\Models\\Image;\n-use App\\Models\\Content;\n-use Illuminate\\Http\\Request;\n-use Illuminate\\Support\\Facades\\Storage;\n-\n-class ContentController extends Controller\n-{\n-    /**\n-     * Display a listing of the resource.\n-     */\n-    public function index()\n-    {\n-        //\n-    }\n-\n-    /**\n-     * Show the form for creating a new resource.\n-     */\n-    public function create()\n-    {\n-        //\n-    }\n-\n-    /**\n-     * Store a newly created resource in storage.\n-     */\n-    public function store(Request $request)\n-    {\n-        //\n-    }\n-\n-    /**\n-     * Display the specified resource.\n-     */\n-    public function show(Content $content)\n-    {\n-        //\n-    }\n-\n-    /**\n-     * Show the form for editing the specified resource.\n-     */\n-    public function edit(Content $content)\n-    {\n-        //\n-    }\n-\n-    /**\n-     * Update the specified resource in storage.\n-     */\n-    public function update(Request $request, Content $content)\n-    {\n-        //\n-    }\n-\n-    /**\n-     * Remove the specified resource from storage.\n-     */\n-    public function destroy(Content $content)\n-    {\n-        foreach ($content->images as $image) {\n-            Storage::disk('public')->delete($image->path);\n-            $image->delete();\n-        }\n-        $content->delete();\n-        return redirect()->route('dashboard.content')->with('success', 'Contenuto eliminata con successo.');\n-    }\n-\n-    public function deleteImage($id)\n-    {\n-        $image = Image::find($id);\n-\n-        if ($image) {\n-            Storage::disk('public')->delete($image->path);\n-            $image->delete();\n-            return response()->json(['success' => true]);\n-        }\n-\n-        return response()->json(['success' => false, 'error' => 'Immagine non trovata'], 404);\n-    }\n-}\n"
                },
                {
                    "date": 1719405751623,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n      * Display a listing of the resource.\n      */\n     public function index()\n     {\n-        $conten = Service::with('images')->get(); // Carica anche le immagini associate\n+        $contents = Content::with('images')->get(); // Carica anche le immagini associate\n         return view('dashboard.service', compact('services'));\n     }\n \n     /**\n"
                },
                {
                    "date": 1719405757663,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n      */\n     public function index()\n     {\n         $contents = Content::with('images')->get(); // Carica anche le immagini associate\n-        return view('dashboard.service', compact('services'));\n+        return view('dashboard.content', compact('contents'));\n     }\n \n     /**\n      * Show the form for creating a new resource.\n"
                },
                {
                    "date": 1719405770664,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,9 +30,21 @@\n      * Store a newly created resource in storage.\n      */\n     public function store(Request $request)\n     {\n-        //\n+        $service = Service::create($request->all());\n+\n+        if ($request->hasFile('images')) {\n+            foreach ($request->file('images') as $file) {\n+                $path = $file->store('images', 'public');\n+                Image::create([\n+                    'path' => $path,\n+                    'service_id' => $service->id,\n+                ]);\n+            }\n+        }\n+\n+        return redirect()->route('dashboard.service')->with('success', 'Servizio creato con successo.');\n     }\n \n     /**\n      * Display the specified resource.\n"
                },
                {
                    "date": 1719405776923,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,9 +30,9 @@\n      * Store a newly created resource in storage.\n      */\n     public function store(Request $request)\n     {\n-        $service = Service::create($request->all());\n+        $service = Content::create($request->all());\n \n         if ($request->hasFile('images')) {\n             foreach ($request->file('images') as $file) {\n                 $path = $file->store('images', 'public');\n"
                },
                {
                    "date": 1719405790314,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,21 +30,21 @@\n      * Store a newly created resource in storage.\n      */\n     public function store(Request $request)\n     {\n-        $service = Content::create($request->all());\n+        $content = Content::create($request->all());\n \n         if ($request->hasFile('images')) {\n             foreach ($request->file('images') as $file) {\n                 $path = $file->store('images', 'public');\n                 Image::create([\n                     'path' => $path,\n-                    'service_id' => $service->id,\n+                    'content_id' => $content->id,\n                 ]);\n             }\n         }\n \n-        return redirect()->route('dashboard.service')->with('success', 'Servizio creato con successo.');\n+        return redirect()->route('dashboard.content')->with('success', 'Servizio creato con successo.');\n     }\n \n     /**\n      * Display the specified resource.\n"
                },
                {
                    "date": 1719405816040,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,110 @@\n+<?php\n+\n+namespace App\\Http\\Controllers;\n+\n+use App\\Models\\Image;\n+use App\\Models\\Content;\n+use Illuminate\\Http\\Request;\n+use Illuminate\\Support\\Facades\\Storage;\n+\n+class ContentController extends Controller\n+{\n+    /**\n+     * Display a listing of the resource.\n+     */\n+    public function index()\n+    {\n+        $contents = Content::with('images')->get(); // Carica anche le immagini associate\n+        return view('dashboard.content', compact('contents'));\n+    }\n+\n+    /**\n+     * Show the form for creating a new resource.\n+     */\n+    public function create()\n+    {\n+        //\n+    }\n+\n+    /**\n+     * Store a newly created resource in storage.\n+     */\n+    public function store(Request $request)\n+    {\n+        $content = Content::create($request->all());\n+\n+        if ($request->hasFile('images')) {\n+            foreach ($request->file('images') as $file) {\n+                $path = $file->store('images', 'public');\n+                Image::create([\n+                    'path' => $path,\n+                    'content_id' => $content->id,\n+                ]);\n+            }\n+        }\n+\n+        return redirect()->route('dashboard.content')->with('success', 'Contenuto creato con successo.');\n+    }\n+\n+    /**\n+     * Display the specified resource.\n+     */\n+    public function show(Content $content)\n+    {\n+        //\n+    }\n+\n+    /**\n+     * Show the form for editing the specified resource.\n+     */\n+    public function edit(Content $content)\n+    {\n+        //\n+    }\n+\n+    /**\n+     * Update the specified resource in storage.\n+     */\n+    public function update(Request $request, Content $content)\n+    {\n+        $service->update($request->all());\n+\n+        if ($request->hasFile('images')) {\n+            foreach ($request->file('images') as $file) {\n+                $path = $file->store('images', 'public');\n+                Image::create([\n+                    'path' => $path,\n+                    'service_id' => $service->id,\n+                ]);\n+            }\n+        }\n+\n+        return redirect()->route('dashboard.service')->with('success', 'Servizio aggiornato con successo.');\n+    }\n+\n+    /**\n+     * Remove the specified resource from storage.\n+     */\n+    public function destroy(Content $content)\n+    {\n+        foreach ($content->images as $image) {\n+            Storage::disk('public')->delete($image->path);\n+            $image->delete();\n+        }\n+        $content->delete();\n+        return redirect()->route('dashboard.content')->with('success', 'Contenuto eliminata con successo.');\n+    }\n+\n+    public function deleteImage($id)\n+    {\n+        $image = Image::find($id);\n+\n+        if ($image) {\n+            Storage::disk('public')->delete($image->path);\n+            $image->delete();\n+            return response()->json(['success' => true]);\n+        }\n+\n+        return response()->json(['success' => false, 'error' => 'Immagine non trovata'], 404);\n+    }\n+}\n"
                },
                {
                    "date": 1719405821369,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,16 +66,16 @@\n      * Update the specified resource in storage.\n      */\n     public function update(Request $request, Content $content)\n     {\n-        $service->update($request->all());\n+        $con->update($request->all());\n \n         if ($request->hasFile('images')) {\n             foreach ($request->file('images') as $file) {\n                 $path = $file->store('images', 'public');\n                 Image::create([\n                     'path' => $path,\n-                    'service_id' => $service->id,\n+                    'con_id' => $con->id,\n                 ]);\n             }\n         }\n \n@@ -107,102 +107,4 @@\n \n         return response()->json(['success' => false, 'error' => 'Immagine non trovata'], 404);\n     }\n }\n-<?php\n-\n-namespace App\\Http\\Controllers;\n-\n-use App\\Models\\Image;\n-use App\\Models\\Content;\n-use Illuminate\\Http\\Request;\n-use Illuminate\\Support\\Facades\\Storage;\n-\n-class ContentController extends Controller\n-{\n-    /**\n-     * Display a listing of the resource.\n-     */\n-    public function index()\n-    {\n-        $contents = Content::with('images')->get(); // Carica anche le immagini associate\n-        return view('dashboard.content', compact('contents'));\n-    }\n-\n-    /**\n-     * Show the form for creating a new resource.\n-     */\n-    public function create()\n-    {\n-        //\n-    }\n-\n-    /**\n-     * Store a newly created resource in storage.\n-     */\n-    public function store(Request $request)\n-    {\n-        $content = Content::create($request->all());\n-\n-        if ($request->hasFile('images')) {\n-            foreach ($request->file('images') as $file) {\n-                $path = $file->store('images', 'public');\n-                Image::create([\n-                    'path' => $path,\n-                    'content_id' => $content->id,\n-                ]);\n-            }\n-        }\n-\n-        return redirect()->route('dashboard.content')->with('success', 'Servizio creato con successo.');\n-    }\n-\n-    /**\n-     * Display the specified resource.\n-     */\n-    public function show(Content $content)\n-    {\n-        //\n-    }\n-\n-    /**\n-     * Show the form for editing the specified resource.\n-     */\n-    public function edit(Content $content)\n-    {\n-        //\n-    }\n-\n-    /**\n-     * Update the specified resource in storage.\n-     */\n-    public function update(Request $request, Content $content)\n-    {\n-        //\n-    }\n-\n-    /**\n-     * Remove the specified resource from storage.\n-     */\n-    public function destroy(Content $content)\n-    {\n-        foreach ($content->images as $image) {\n-            Storage::disk('public')->delete($image->path);\n-            $image->delete();\n-        }\n-        $content->delete();\n-        return redirect()->route('dashboard.content')->with('success', 'Contenuto eliminata con successo.');\n-    }\n-\n-    public function deleteImage($id)\n-    {\n-        $image = Image::find($id);\n-\n-        if ($image) {\n-            Storage::disk('public')->delete($image->path);\n-            $image->delete();\n-            return response()->json(['success' => true]);\n-        }\n-\n-        return response()->json(['success' => false, 'error' => 'Immagine non trovata'], 404);\n-    }\n-}\n"
                },
                {
                    "date": 1719405829968,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,110 @@\n+<?php\n+\n+namespace App\\Http\\Controllers;\n+\n+use App\\Models\\Image;\n+use App\\Models\\Content;\n+use Illuminate\\Http\\Request;\n+use Illuminate\\Support\\Facades\\Storage;\n+\n+class ContentController extends Controller\n+{\n+    /**\n+     * Display a listing of the resource.\n+     */\n+    public function index()\n+    {\n+        $contents = Content::with('images')->get(); // Carica anche le immagini associate\n+        return view('dashboard.content', compact('contents'));\n+    }\n+\n+    /**\n+     * Show the form for creating a new resource.\n+     */\n+    public function create()\n+    {\n+        //\n+    }\n+\n+    /**\n+     * Store a newly created resource in storage.\n+     */\n+    public function store(Request $request)\n+    {\n+        $content = Content::create($request->all());\n+\n+        if ($request->hasFile('images')) {\n+            foreach ($request->file('images') as $file) {\n+                $path = $file->store('images', 'public');\n+                Image::create([\n+                    'path' => $path,\n+                    'content_id' => $content->id,\n+                ]);\n+            }\n+        }\n+\n+        return redirect()->route('dashboard.content')->with('success', 'Contenuto creato con successo.');\n+    }\n+\n+    /**\n+     * Display the specified resource.\n+     */\n+    public function show(Content $content)\n+    {\n+        //\n+    }\n+\n+    /**\n+     * Show the form for editing the specified resource.\n+     */\n+    public function edit(Content $content)\n+    {\n+        //\n+    }\n+\n+    /**\n+     * Update the specified resource in storage.\n+     */\n+    public function update(Request $request, Content $content)\n+    {\n+        $content->update($request->all());\n+\n+        if ($request->hasFile('images')) {\n+            foreach ($request->file('images') as $file) {\n+                $path = $file->store('images', 'public');\n+                Image::create([\n+                    'path' => $path,\n+                    'content_id' => $content->id,\n+                ]);\n+            }\n+        }\n+\n+        return redirect()->route('dashboard.content')->with('success', 'Servizio aggiornato con successo.');\n+    }\n+\n+    /**\n+     * Remove the specified resource from storage.\n+     */\n+    public function destroy(Content $content)\n+    {\n+        foreach ($content->images as $image) {\n+            Storage::disk('public')->delete($image->path);\n+            $image->delete();\n+        }\n+        $content->delete();\n+        return redirect()->route('dashboard.content')->with('success', 'Contenuto eliminata con successo.');\n+    }\n+\n+    public function deleteImage($id)\n+    {\n+        $image = Image::find($id);\n+\n+        if ($image) {\n+            Storage::disk('public')->delete($image->path);\n+            $image->delete();\n+            return response()->json(['success' => true]);\n+        }\n+\n+        return response()->json(['success' => false, 'error' => 'Immagine non trovata'], 404);\n+    }\n+}\n"
                },
                {
                    "date": 1719405836495,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,110 @@\n+<?php\n+\n+namespace App\\Http\\Controllers;\n+\n+use App\\Models\\Image;\n+use App\\Models\\Content;\n+use Illuminate\\Http\\Request;\n+use Illuminate\\Support\\Facades\\Storage;\n+\n+class ContentController extends Controller\n+{\n+    /**\n+     * Display a listing of the resource.\n+     */\n+    public function index()\n+    {\n+        $contents = Content::with('images')->get(); // Carica anche le immagini associate\n+        return view('dashboard.content', compact('contents'));\n+    }\n+\n+    /**\n+     * Show the form for creating a new resource.\n+     */\n+    public function create()\n+    {\n+        //\n+    }\n+\n+    /**\n+     * Store a newly created resource in storage.\n+     */\n+    public function store(Request $request)\n+    {\n+        $content = Content::create($request->all());\n+\n+        if ($request->hasFile('images')) {\n+            foreach ($request->file('images') as $file) {\n+                $path = $file->store('images', 'public');\n+                Image::create([\n+                    'path' => $path,\n+                    'content_id' => $content->id,\n+                ]);\n+            }\n+        }\n+\n+        return redirect()->route('dashboard.content')->with('success', 'Contenuto creato con successo.');\n+    }\n+\n+    /**\n+     * Display the specified resource.\n+     */\n+    public function show(Content $content)\n+    {\n+        //\n+    }\n+\n+    /**\n+     * Show the form for editing the specified resource.\n+     */\n+    public function edit(Content $content)\n+    {\n+        //\n+    }\n+\n+    /**\n+     * Update the specified resource in storage.\n+     */\n+    public function update(Request $request, Content $content)\n+    {\n+        $content->update($request->all());\n+\n+        if ($request->hasFile('images')) {\n+            foreach ($request->file('images') as $file) {\n+                $path = $file->store('images', 'public');\n+                Image::create([\n+                    'path' => $path,\n+                    'content_id' => $content->id,\n+                ]);\n+            }\n+        }\n+\n+        return redirect()->route('dashboard.content')->with('success', 'Contenuto aggiornato con successo.');\n+    }\n+\n+    /**\n+     * Remove the specified resource from storage.\n+     */\n+    public function destroy(Content $content)\n+    {\n+        foreach ($content->images as $image) {\n+            Storage::disk('public')->delete($image->path);\n+            $image->delete();\n+        }\n+        $content->delete();\n+        return redirect()->route('dashboard.content')->with('success', 'Contenuto eliminata con successo.');\n+    }\n+\n+    public function deleteImage($id)\n+    {\n+        $image = Image::find($id);\n+\n+        if ($image) {\n+            Storage::disk('public')->delete($image->path);\n+            $image->delete();\n+            return response()->json(['success' => true]);\n+        }\n+\n+        return response()->json(['success' => false, 'error' => 'Immagine non trovata'], 404);\n+    }\n+}\n"
                },
                {
                    "date": 1719408980023,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -91,9 +91,9 @@\n             Storage::disk('public')->delete($image->path);\n             $image->delete();\n         }\n         $content->delete();\n-        return redirect()->route('dashboard.content')->with('success', 'Contenuto eliminata con successo.');\n+        return redirect()->route('dashboard.content')->with('success', 'Contenuto eliminato con successo.');\n     }\n \n     public function deleteImage($id)\n     {\n@@ -107,224 +107,4 @@\n \n         return response()->json(['success' => false, 'error' => 'Immagine non trovata'], 404);\n     }\n }\n-<?php\n-\n-namespace App\\Http\\Controllers;\n-\n-use App\\Models\\Image;\n-use App\\Models\\Content;\n-use Illuminate\\Http\\Request;\n-use Illuminate\\Support\\Facades\\Storage;\n-\n-class ContentController extends Controller\n-{\n-    /**\n-     * Display a listing of the resource.\n-     */\n-    public function index()\n-    {\n-        $contents = Content::with('images')->get(); // Carica anche le immagini associate\n-        return view('dashboard.content', compact('contents'));\n-    }\n-\n-    /**\n-     * Show the form for creating a new resource.\n-     */\n-    public function create()\n-    {\n-        //\n-    }\n-\n-    /**\n-     * Store a newly created resource in storage.\n-     */\n-    public function store(Request $request)\n-    {\n-        $content = Content::create($request->all());\n-\n-        if ($request->hasFile('images')) {\n-            foreach ($request->file('images') as $file) {\n-                $path = $file->store('images', 'public');\n-                Image::create([\n-                    'path' => $path,\n-                    'content_id' => $content->id,\n-                ]);\n-            }\n-        }\n-\n-        return redirect()->route('dashboard.content')->with('success', 'Contenuto creato con successo.');\n-    }\n-\n-    /**\n-     * Display the specified resource.\n-     */\n-    public function show(Content $content)\n-    {\n-        //\n-    }\n-\n-    /**\n-     * Show the form for editing the specified resource.\n-     */\n-    public function edit(Content $content)\n-    {\n-        //\n-    }\n-\n-    /**\n-     * Update the specified resource in storage.\n-     */\n-    public function update(Request $request, Content $content)\n-    {\n-        $content->update($request->all());\n-\n-        if ($request->hasFile('images')) {\n-            foreach ($request->file('images') as $file) {\n-                $path = $file->store('images', 'public');\n-                Image::create([\n-                    'path' => $path,\n-                    'content_id' => $content->id,\n-                ]);\n-            }\n-        }\n-\n-        return redirect()->route('dashboard.content')->with('success', 'Servizio aggiornato con successo.');\n-    }\n-\n-    /**\n-     * Remove the specified resource from storage.\n-     */\n-    public function destroy(Content $content)\n-    {\n-        foreach ($content->images as $image) {\n-            Storage::disk('public')->delete($image->path);\n-            $image->delete();\n-        }\n-        $content->delete();\n-        return redirect()->route('dashboard.content')->with('success', 'Contenuto eliminata con successo.');\n-    }\n-\n-    public function deleteImage($id)\n-    {\n-        $image = Image::find($id);\n-\n-        if ($image) {\n-            Storage::disk('public')->delete($image->path);\n-            $image->delete();\n-            return response()->json(['success' => true]);\n-        }\n-\n-        return response()->json(['success' => false, 'error' => 'Immagine non trovata'], 404);\n-    }\n-}\n-<?php\n-\n-namespace App\\Http\\Controllers;\n-\n-use App\\Models\\Image;\n-use App\\Models\\Content;\n-use Illuminate\\Http\\Request;\n-use Illuminate\\Support\\Facades\\Storage;\n-\n-class ContentController extends Controller\n-{\n-    /**\n-     * Display a listing of the resource.\n-     */\n-    public function index()\n-    {\n-        $contents = Content::with('images')->get(); // Carica anche le immagini associate\n-        return view('dashboard.content', compact('contents'));\n-    }\n-\n-    /**\n-     * Show the form for creating a new resource.\n-     */\n-    public function create()\n-    {\n-        //\n-    }\n-\n-    /**\n-     * Store a newly created resource in storage.\n-     */\n-    public function store(Request $request)\n-    {\n-        $content = Content::create($request->all());\n-\n-        if ($request->hasFile('images')) {\n-            foreach ($request->file('images') as $file) {\n-                $path = $file->store('images', 'public');\n-                Image::create([\n-                    'path' => $path,\n-                    'content_id' => $content->id,\n-                ]);\n-            }\n-        }\n-\n-        return redirect()->route('dashboard.content')->with('success', 'Contenuto creato con successo.');\n-    }\n-\n-    /**\n-     * Display the specified resource.\n-     */\n-    public function show(Content $content)\n-    {\n-        //\n-    }\n-\n-    /**\n-     * Show the form for editing the specified resource.\n-     */\n-    public function edit(Content $content)\n-    {\n-        //\n-    }\n-\n-    /**\n-     * Update the specified resource in storage.\n-     */\n-    public function update(Request $request, Content $content)\n-    {\n-        $con->update($request->all());\n-\n-        if ($request->hasFile('images')) {\n-            foreach ($request->file('images') as $file) {\n-                $path = $file->store('images', 'public');\n-                Image::create([\n-                    'path' => $path,\n-                    'con_id' => $con->id,\n-                ]);\n-            }\n-        }\n-\n-        return redirect()->route('dashboard.service')->with('success', 'Servizio aggiornato con successo.');\n-    }\n-\n-    /**\n-     * Remove the specified resource from storage.\n-     */\n-    public function destroy(Content $content)\n-    {\n-        foreach ($content->images as $image) {\n-            Storage::disk('public')->delete($image->path);\n-            $image->delete();\n-        }\n-        $content->delete();\n-        return redirect()->route('dashboard.content')->with('success', 'Contenuto eliminata con successo.');\n-    }\n-\n-    public function deleteImage($id)\n-    {\n-        $image = Image::find($id);\n-\n-        if ($image) {\n-            Storage::disk('public')->delete($image->path);\n-            $image->delete();\n-            return response()->json(['success' => true]);\n-        }\n-\n-        return response()->json(['success' => false, 'error' => 'Immagine non trovata'], 404);\n-    }\n-}\n"
                },
                {
                    "date": 1719409491618,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,8 +74,9 @@\n                 $path = $file->store('images', 'public');\n                 Image::create([\n                     'path' => $path,\n                     'content_id' => $content->id,\n+                    \n                 ]);\n             }\n         }\n \n"
                },
                {
                    "date": 1719409499051,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,9 +74,9 @@\n                 $path = $file->store('images', 'public');\n                 Image::create([\n                     'path' => $path,\n                     'content_id' => $content->id,\n-                    \n+                    dd('immagine ')\n                 ]);\n             }\n         }\n \n"
                },
                {
                    "date": 1719409519315,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,9 +74,8 @@\n                 $path = $file->store('images', 'public');\n                 Image::create([\n                     'path' => $path,\n                     'content_id' => $content->id,\n-                    dd('immagine ')\n                 ]);\n             }\n         }\n \n"
                },
                {
                    "date": 1719410688796,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,10 @@\n     /**\n      * Display a listing of the resource.\n      */\n     public function index()\n-    {\n+    {   \n+        \n         $contents = Content::with('images')->get(); // Carica anche le immagini associate\n         return view('dashboard.content', compact('contents'));\n     }\n \n"
                },
                {
                    "date": 1719410695101,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n      * Display a listing of the resource.\n      */\n     public function index()\n     {   \n-        \n+        $pages = Page\n         $contents = Content::with('images')->get(); // Carica anche le immagini associate\n         return view('dashboard.content', compact('contents'));\n     }\n \n"
                },
                {
                    "date": 1719410702233,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n      * Display a listing of the resource.\n      */\n     public function index()\n     {   \n-        $pages = Page\n+        $pages = Page::all();\n         $contents = Content::with('images')->get(); // Carica anche le immagini associate\n         return view('dashboard.content', compact('contents'));\n     }\n \n"
                },
                {
                    "date": 1719410711675,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,9 @@\n <?php\n \n namespace App\\Http\\Controllers;\n \n+use App\\Models\\Page;\n use App\\Models\\Image;\n use App\\Models\\Content;\n use Illuminate\\Http\\Request;\n use Illuminate\\Support\\Facades\\Storage;\n"
                }
            ],
            "date": 1719405044352,
            "name": "Commit-0",
            "content": "<?php\n\nnamespace App\\Http\\Controllers;\n\nuse App\\Models\\Content;\nuse Illuminate\\Http\\Request;\n\nclass ContentController extends Controller\n{\n    /**\n     * Display a listing of the resource.\n     */\n    public function index()\n    {\n        //\n    }\n\n    /**\n     * Show the form for creating a new resource.\n     */\n    public function create()\n    {\n        //\n    }\n\n    /**\n     * Store a newly created resource in storage.\n     */\n    public function store(Request $request)\n    {\n        //\n    }\n\n    /**\n     * Display the specified resource.\n     */\n    public function show(Content $content)\n    {\n        //\n    }\n\n    /**\n     * Show the form for editing the specified resource.\n     */\n    public function edit(Content $content)\n    {\n        //\n    }\n\n    /**\n     * Update the specified resource in storage.\n     */\n    public function update(Request $request, Content $content)\n    {\n        //\n    }\n\n    /**\n     * Remove the specified resource from storage.\n     */\n    public function destroy(Content $content)\n    {\n        //\n    }\n\n    public function deleteImage($id)\n    {\n        $image = Image::find($id);\n\n        if ($image) {\n            Storage::disk('public')->delete($image->path);\n            $image->delete();\n            return response()->json(['success' => true]);\n        }\n\n        return response()->json(['success' => false, 'error' => 'Immagine non trovata'], 404);\n    }\n}\n"
        }
    ]
}