{
    "sourceFile": "app/Http/Controllers/OwnerDataController.php",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 49,
            "patches": [
                {
                    "date": 1719315021811,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1719315029985,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n      * Display a listing of the resource.\n      */\n     public function index()\n     {\n-        \n+        ownerDt\n     }\n \n     /**\n      * Show the form for creating a new resource.\n"
                },
                {
                    "date": 1719315036902,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n      * Display a listing of the resource.\n      */\n     public function index()\n     {\n-        ownerDt\n+        $ownerdata\n     }\n \n     /**\n      * Show the form for creating a new resource.\n"
                },
                {
                    "date": 1719315043098,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,65 @@\n+<?php\n+\n+namespace App\\Http\\Controllers;\n+\n+use App\\Models\\OwnerData;\n+use Illuminate\\Http\\Request;\n+\n+class OwnerDataController extends Controller\n+{\n+    /**\n+     * Display a listing of the resource.\n+     */\n+    public function index()\n+    {\n+        $ownerdata = OwnerData\n+    }\n+\n+    /**\n+     * Show the form for creating a new resource.\n+     */\n+    public function create()\n+    {\n+        //\n+    }\n+\n+    /**\n+     * Store a newly created resource in storage.\n+     */\n+    public function store(Request $request)\n+    {\n+        //\n+    }\n+\n+    /**\n+     * Display the specified resource.\n+     */\n+    public function show(OwnerData $ownerData)\n+    {\n+        //\n+    }\n+\n+    /**\n+     * Show the form for editing the specified resource.\n+     */\n+    public function edit(OwnerData $ownerData)\n+    {\n+        //\n+    }\n+\n+    /**\n+     * Update the specified resource in storage.\n+     */\n+    public function update(Request $request, OwnerData $ownerData)\n+    {\n+        //\n+    }\n+\n+    /**\n+     * Remove the specified resource from storage.\n+     */\n+    public function destroy(OwnerData $ownerData)\n+    {\n+        //\n+    }\n+}\n"
                },
                {
                    "date": 1719315050200,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,66 @@\n+<?php\n+\n+namespace App\\Http\\Controllers;\n+\n+use App\\Models\\OwnerData;\n+use Illuminate\\Http\\Request;\n+\n+class OwnerDataController extends Controller\n+{\n+    /**\n+     * Display a listing of the resource.\n+     */\n+    public function index()\n+    {\n+        $ownerdata = OwnerData::all()\n+        return\n+    }\n+\n+    /**\n+     * Show the form for creating a new resource.\n+     */\n+    public function create()\n+    {\n+        //\n+    }\n+\n+    /**\n+     * Store a newly created resource in storage.\n+     */\n+    public function store(Request $request)\n+    {\n+        //\n+    }\n+\n+    /**\n+     * Display the specified resource.\n+     */\n+    public function show(OwnerData $ownerData)\n+    {\n+        //\n+    }\n+\n+    /**\n+     * Show the form for editing the specified resource.\n+     */\n+    public function edit(OwnerData $ownerData)\n+    {\n+        //\n+    }\n+\n+    /**\n+     * Update the specified resource in storage.\n+     */\n+    public function update(Request $request, OwnerData $ownerData)\n+    {\n+        //\n+    }\n+\n+    /**\n+     * Remove the specified resource from storage.\n+     */\n+    public function destroy(OwnerData $ownerData)\n+    {\n+        //\n+    }\n+}\n"
                },
                {
                    "date": 1719315058686,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n      */\n     public function index()\n     {\n         $ownerdata = OwnerData::all()\n-        return\n+        return view(dashboa)\n     }\n \n     /**\n      * Show the form for creating a new resource.\n@@ -63,134 +63,4 @@\n     {\n         //\n     }\n }\n-<?php\n-\n-namespace App\\Http\\Controllers;\n-\n-use App\\Models\\OwnerData;\n-use Illuminate\\Http\\Request;\n-\n-class OwnerDataController extends Controller\n-{\n-    /**\n-     * Display a listing of the resource.\n-     */\n-    public function index()\n-    {\n-        $ownerdata = OwnerData\n-    }\n-\n-    /**\n-     * Show the form for creating a new resource.\n-     */\n-    public function create()\n-    {\n-        //\n-    }\n-\n-    /**\n-     * Store a newly created resource in storage.\n-     */\n-    public function store(Request $request)\n-    {\n-        //\n-    }\n-\n-    /**\n-     * Display the specified resource.\n-     */\n-    public function show(OwnerData $ownerData)\n-    {\n-        //\n-    }\n-\n-    /**\n-     * Show the form for editing the specified resource.\n-     */\n-    public function edit(OwnerData $ownerData)\n-    {\n-        //\n-    }\n-\n-    /**\n-     * Update the specified resource in storage.\n-     */\n-    public function update(Request $request, OwnerData $ownerData)\n-    {\n-        //\n-    }\n-\n-    /**\n-     * Remove the specified resource from storage.\n-     */\n-    public function destroy(OwnerData $ownerData)\n-    {\n-        //\n-    }\n-}\n-<?php\n-\n-namespace App\\Http\\Controllers;\n-\n-use App\\Models\\OwnerData;\n-use Illuminate\\Http\\Request;\n-\n-class OwnerDataController extends Controller\n-{\n-    /**\n-     * Display a listing of the resource.\n-     */\n-    public function index()\n-    {\n-        $ownerdata\n-    }\n-\n-    /**\n-     * Show the form for creating a new resource.\n-     */\n-    public function create()\n-    {\n-        //\n-    }\n-\n-    /**\n-     * Store a newly created resource in storage.\n-     */\n-    public function store(Request $request)\n-    {\n-        //\n-    }\n-\n-    /**\n-     * Display the specified resource.\n-     */\n-    public function show(OwnerData $ownerData)\n-    {\n-        //\n-    }\n-\n-    /**\n-     * Show the form for editing the specified resource.\n-     */\n-    public function edit(OwnerData $ownerData)\n-    {\n-        //\n-    }\n-\n-    /**\n-     * Update the specified resource in storage.\n-     */\n-    public function update(Request $request, OwnerData $ownerData)\n-    {\n-        //\n-    }\n-\n-    /**\n-     * Remove the specified resource from storage.\n-     */\n-    public function destroy(OwnerData $ownerData)\n-    {\n-        //\n-    }\n-}\n"
                },
                {
                    "date": 1719315065706,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n      */\n     public function index()\n     {\n         $ownerdata = OwnerData::all()\n-        return view(dashboa)\n+        return view('dashboard.ownerData')\n     }\n \n     /**\n      * Show the form for creating a new resource.\n"
                },
                {
                    "date": 1719315077287,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n      */\n     public function index()\n     {\n         $ownerdata = OwnerData::all()\n-        return view('dashboard.ownerData')\n+        return view('dashboard.ownerData', compact('ownerdata'))\n     }\n \n     /**\n      * Show the form for creating a new resource.\n"
                },
                {
                    "date": 1719315086832,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,10 +11,10 @@\n      * Display a listing of the resource.\n      */\n     public function index()\n     {\n-        $ownerdata = OwnerData::all()\n-        return view('dashboard.ownerData', compact('ownerdata'))\n+        $ownerdata = OwnerData::all();\n+        return view('dashboard.ownerData', compact('ownerdata'));\n     }\n \n     /**\n      * Show the form for creating a new resource.\n"
                },
                {
                    "date": 1719316554075,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,66 +1,113 @@\n <?php\n \n namespace App\\Http\\Controllers;\n \n+use Illuminate\\Http\\Request;\n use App\\Models\\OwnerData;\n-use Illuminate\\Http\\Request;\n \n class OwnerDataController extends Controller\n {\n     /**\n-     * Display a listing of the resource.\n+     * Mostra l'elenco degli owner.\n+     *\n+     * @return \\Illuminate\\Http\\Response\n      */\n     public function index()\n     {\n-        $ownerdata = OwnerData::all();\n-        return view('dashboard.ownerData', compact('ownerdata'));\n+        $ownerData = OwnerData::first(); // Supponendo che ci sia solo un record di owner\n+        return view('owner.index', compact('ownerData'));\n     }\n \n     /**\n-     * Show the form for creating a new resource.\n+     * Mostra il form per creare un nuovo owner.\n+     *\n+     * @return \\Illuminate\\Http\\Response\n      */\n     public function create()\n     {\n-        //\n+        return view('owner.create');\n     }\n \n     /**\n-     * Store a newly created resource in storage.\n+     * Salva il nuovo owner nel database.\n+     *\n+     * @param  \\Illuminate\\Http\\Request  $request\n+     * @return \\Illuminate\\Http\\Response\n      */\n     public function store(Request $request)\n     {\n-        //\n+        $validatedData = $request->validate([\n+            'name' => 'required|string|max:255',\n+            'surname' => 'required|string|max:255',\n+            'companyName' => 'nullable|string|max:255',\n+            'address' => 'nullable|string|max:255',\n+            'city' => 'nullable|string|max:255',\n+            'pIva' => 'nullable|string|max:255',\n+            'codFisc' => 'nullable|string|max:255',\n+            'phone' => 'nullable|string|max:255',\n+            'phone2' => 'nullable|string|max:255',\n+            'phone3' => 'nullable|string|max:255',\n+        ]);\n+\n+        $owner = new OwnerData();\n+        $owner->fill($validatedData);\n+        $owner->save();\n+\n+        return redirect()->route('owner.index')->with('success', 'Owner creato con successo.');\n     }\n \n     /**\n-     * Display the specified resource.\n+     * Mostra il form per modificare l'owner specificato.\n+     *\n+     * @param  int  $id\n+     * @return \\Illuminate\\Http\\Response\n      */\n-    public function show(OwnerData $ownerData)\n+    public function edit($id)\n     {\n-        //\n+        $owner = OwnerData::findOrFail($id);\n+        return view('owner.edit', compact('owner'));\n     }\n \n     /**\n-     * Show the form for editing the specified resource.\n+     * Aggiorna l'owner nel database.\n+     *\n+     * @param  \\Illuminate\\Http\\Request  $request\n+     * @param  int  $id\n+     * @return \\Illuminate\\Http\\Response\n      */\n-    public function edit(OwnerData $ownerData)\n+    public function update(Request $request, $id)\n     {\n-        //\n+        $validatedData = $request->validate([\n+            'name' => 'required|string|max:255',\n+            'surname' => 'required|string|max:255',\n+            'companyName' => 'nullable|string|max:255',\n+            'address' => 'nullable|string|max:255',\n+            'city' => 'nullable|string|max:255',\n+            'pIva' => 'nullable|string|max:255',\n+            'codFisc' => 'nullable|string|max:255',\n+            'phone' => 'nullable|string|max:255',\n+            'phone2' => 'nullable|string|max:255',\n+            'phone3' => 'nullable|string|max:255',\n+        ]);\n+\n+        $owner = OwnerData::findOrFail($id);\n+        $owner->fill($validatedData);\n+        $owner->save();\n+\n+        return redirect()->route('owner.index')->with('success', 'Owner aggiornato con successo.');\n     }\n \n     /**\n-     * Update the specified resource in storage.\n+     * Rimuove l'owner specificato dal database.\n+     *\n+     * @param  int  $id\n+     * @return \\Illuminate\\Http\\Response\n      */\n-    public function update(Request $request, OwnerData $ownerData)\n+    public function destroy($id)\n     {\n-        //\n-    }\n+        $owner = OwnerData::findOrFail($id);\n+        $owner->delete();\n \n-    /**\n-     * Remove the specified resource from storage.\n-     */\n-    public function destroy(OwnerData $ownerData)\n-    {\n-        //\n+        return redirect()->route('owner.index')->with('success', 'Owner eliminato con successo.');\n     }\n-}\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1719316899501,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n      */\n     public function index()\n     {\n         $ownerData = OwnerData::first(); // Supponendo che ci sia solo un record di owner\n-        return view('owner.index', compact('ownerData'));\n+        return view('dashboard.index', compact('ownerData'));\n     }\n \n     /**\n      * Mostra il form per creare un nuovo owner.\n"
                },
                {
                    "date": 1719316907279,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n      */\n     public function index()\n     {\n         $ownerData = OwnerData::first(); // Supponendo che ci sia solo un record di owner\n-        return view('dashboard.index', compact('ownerData'));\n+        return view('dashboard.owne', compact('ownerData'));\n     }\n \n     /**\n      * Mostra il form per creare un nuovo owner.\n"
                },
                {
                    "date": 1719316912543,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n      */\n     public function index()\n     {\n         $ownerData = OwnerData::first(); // Supponendo che ci sia solo un record di owner\n-        return view('dashboard.owne', compact('ownerData'));\n+        return view('dashboard.owner', compact('ownerData'));\n     }\n \n     /**\n      * Mostra il form per creare un nuovo owner.\n"
                },
                {
                    "date": 1719316918434,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n      */\n     public function index()\n     {\n         $ownerData = OwnerData::first(); // Supponendo che ci sia solo un record di owner\n-        return view('dashboard.owner', compact('ownerData'));\n+        return view('dashboard.OwnderData', compact('ownerData'));\n     }\n \n     /**\n      * Mostra il form per creare un nuovo owner.\n"
                },
                {
                    "date": 1719316926520,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n      * @return \\Illuminate\\Http\\Response\n      */\n     public function create()\n     {\n-        return view('owner.create');\n+\n     }\n \n     /**\n      * Salva il nuovo owner nel database.\n"
                },
                {
                    "date": 1719317122120,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,9 +52,9 @@\n         $owner = new OwnerData();\n         $owner->fill($validatedData);\n         $owner->save();\n \n-        return redirect()->route('owner.index')->with('success', 'Owner creato con successo.');\n+        return redirect()->route('dashboard.OwnderData')->with('success', 'Owner creato con successo.');\n     }\n \n     /**\n      * Mostra il form per modificare l'owner specificato.\n"
                },
                {
                    "date": 1719317130440,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,113 @@\n+<?php\n+\n+namespace App\\Http\\Controllers;\n+\n+use Illuminate\\Http\\Request;\n+use App\\Models\\OwnerData;\n+\n+class OwnerDataController extends Controller\n+{\n+    /**\n+     * Mostra l'elenco degli owner.\n+     *\n+     * @return \\Illuminate\\Http\\Response\n+     */\n+    public function index()\n+    {\n+        $ownerData = OwnerData::first(); // Supponendo che ci sia solo un record di owner\n+        return view('dashboard.OwnderData', compact('ownerData'));\n+    }\n+\n+    /**\n+     * Mostra il form per creare un nuovo owner.\n+     *\n+     * @return \\Illuminate\\Http\\Response\n+     */\n+    public function create()\n+    {\n+\n+    }\n+\n+    /**\n+     * Salva il nuovo owner nel database.\n+     *\n+     * @param  \\Illuminate\\Http\\Request  $request\n+     * @return \\Illuminate\\Http\\Response\n+     */\n+    public function store(Request $request)\n+    {\n+        $validatedData = $request->validate([\n+            'name' => 'required|string|max:255',\n+            'surname' => 'required|string|max:255',\n+            'companyName' => 'nullable|string|max:255',\n+            'address' => 'nullable|string|max:255',\n+            'city' => 'nullable|string|max:255',\n+            'pIva' => 'nullable|string|max:255',\n+            'codFisc' => 'nullable|string|max:255',\n+            'phone' => 'nullable|string|max:255',\n+            'phone2' => 'nullable|string|max:255',\n+            'phone3' => 'nullable|string|max:255',\n+        ]);\n+\n+        $owner = new OwnerData();\n+        $owner->fill($validatedData);\n+        $owner->save();\n+\n+        return redirect()->route('dashboard.OwnderData')->with('success', 'Owner creato con successo.');\n+    }\n+\n+    /**\n+     * Mostra il form per modificare l'owner specificato.\n+     *\n+     * @param  int  $id\n+     * @return \\Illuminate\\Http\\Response\n+     */\n+    public function edit($id)\n+    {\n+        $owner = OwnerData::findOrFail($id);\n+        return view('dashboard.OwnderData', compact('owner'));\n+    }\n+\n+    /**\n+     * Aggiorna l'owner nel database.\n+     *\n+     * @param  \\Illuminate\\Http\\Request  $request\n+     * @param  int  $id\n+     * @return \\Illuminate\\Http\\Response\n+     */\n+    public function update(Request $request, $id)\n+    {\n+        $validatedData = $request->validate([\n+            'name' => 'required|string|max:255',\n+            'surname' => 'required|string|max:255',\n+            'companyName' => 'nullable|string|max:255',\n+            'address' => 'nullable|string|max:255',\n+            'city' => 'nullable|string|max:255',\n+            'pIva' => 'nullable|string|max:255',\n+            'codFisc' => 'nullable|string|max:255',\n+            'phone' => 'nullable|string|max:255',\n+            'phone2' => 'nullable|string|max:255',\n+            'phone3' => 'nullable|string|max:255',\n+        ]);\n+\n+        $owner = OwnerData::findOrFail($id);\n+        $owner->fill($validatedData);\n+        $owner->save();\n+\n+        return redirect()->route('dashboard.OwnderData')->with('success', 'Owner aggiornato con successo.');\n+    }\n+\n+    /**\n+     * Rimuove l'owner specificato dal database.\n+     *\n+     * @param  int  $id\n+     * @return \\Illuminate\\Http\\Response\n+     */\n+    public function destroy($id)\n+    {\n+        $owner = OwnerData::findOrFail($id);\n+        $owner->delete();\n+\n+        return redirect()->route('owner.index')->with('success', 'Owner eliminato con successo.');\n+    }\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1719317135490,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -107,120 +107,7 @@\n     {\n         $owner = OwnerData::findOrFail($id);\n         $owner->delete();\n \n-        return redirect()->route('owner.index')->with('success', 'Owner eliminato con successo.');\n+        return redirect()->route('dashboard.OwnderData')->with('success', 'Owner eliminato con successo.');\n     }\n-}\n-<?php\n-\n-namespace App\\Http\\Controllers;\n-\n-use Illuminate\\Http\\Request;\n-use App\\Models\\OwnerData;\n-\n-class OwnerDataController extends Controller\n-{\n-    /**\n-     * Mostra l'elenco degli owner.\n-     *\n-     * @return \\Illuminate\\Http\\Response\n-     */\n-    public function index()\n-    {\n-        $ownerData = OwnerData::first(); // Supponendo che ci sia solo un record di owner\n-        return view('dashboard.OwnderData', compact('ownerData'));\n-    }\n-\n-    /**\n-     * Mostra il form per creare un nuovo owner.\n-     *\n-     * @return \\Illuminate\\Http\\Response\n-     */\n-    public function create()\n-    {\n-\n-    }\n-\n-    /**\n-     * Salva il nuovo owner nel database.\n-     *\n-     * @param  \\Illuminate\\Http\\Request  $request\n-     * @return \\Illuminate\\Http\\Response\n-     */\n-    public function store(Request $request)\n-    {\n-        $validatedData = $request->validate([\n-            'name' => 'required|string|max:255',\n-            'surname' => 'required|string|max:255',\n-            'companyName' => 'nullable|string|max:255',\n-            'address' => 'nullable|string|max:255',\n-            'city' => 'nullable|string|max:255',\n-            'pIva' => 'nullable|string|max:255',\n-            'codFisc' => 'nullable|string|max:255',\n-            'phone' => 'nullable|string|max:255',\n-            'phone2' => 'nullable|string|max:255',\n-            'phone3' => 'nullable|string|max:255',\n-        ]);\n-\n-        $owner = new OwnerData();\n-        $owner->fill($validatedData);\n-        $owner->save();\n-\n-        return redirect()->route('dashboard.OwnderData')->with('success', 'Owner creato con successo.');\n-    }\n-\n-    /**\n-     * Mostra il form per modificare l'owner specificato.\n-     *\n-     * @param  int  $id\n-     * @return \\Illuminate\\Http\\Response\n-     */\n-    public function edit($id)\n-    {\n-        $owner = OwnerData::findOrFail($id);\n-        return view('owner.edit', compact('owner'));\n-    }\n-\n-    /**\n-     * Aggiorna l'owner nel database.\n-     *\n-     * @param  \\Illuminate\\Http\\Request  $request\n-     * @param  int  $id\n-     * @return \\Illuminate\\Http\\Response\n-     */\n-    public function update(Request $request, $id)\n-    {\n-        $validatedData = $request->validate([\n-            'name' => 'required|string|max:255',\n-            'surname' => 'required|string|max:255',\n-            'companyName' => 'nullable|string|max:255',\n-            'address' => 'nullable|string|max:255',\n-            'city' => 'nullable|string|max:255',\n-            'pIva' => 'nullable|string|max:255',\n-            'codFisc' => 'nullable|string|max:255',\n-            'phone' => 'nullable|string|max:255',\n-            'phone2' => 'nullable|string|max:255',\n-            'phone3' => 'nullable|string|max:255',\n-        ]);\n-\n-        $owner = OwnerData::findOrFail($id);\n-        $owner->fill($validatedData);\n-        $owner->save();\n-\n-        return redirect()->route('owner.index')->with('success', 'Owner aggiornato con successo.');\n-    }\n-\n-    /**\n-     * Rimuove l'owner specificato dal database.\n-     *\n-     * @param  int  $id\n-     * @return \\Illuminate\\Http\\Response\n-     */\n-    public function destroy($id)\n-    {\n-        $owner = OwnerData::findOrFail($id);\n-        $owner->delete();\n-\n-        return redirect()->route('owner.index')->with('success', 'Owner eliminato con successo.');\n-    }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1719317485357,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n      */\n     public function index()\n     {\n         $ownerData = OwnerData::first(); // Supponendo che ci sia solo un record di owner\n-        return view('dashboard.OwnderData', compact('ownerData'));\n+        return view('dashboard.ownderData', compact('ownerData'));\n     }\n \n     /**\n      * Mostra il form per creare un nuovo owner.\n@@ -52,9 +52,9 @@\n         $owner = new OwnerData();\n         $owner->fill($validatedData);\n         $owner->save();\n \n-        return redirect()->route('dashboard.OwnderData')->with('success', 'Owner creato con successo.');\n+        return redirect()->route('dashboard.ownderData')->with('success', 'Owner creato con successo.');\n     }\n \n     /**\n      * Mostra il form per modificare l'owner specificato.\n@@ -64,9 +64,9 @@\n      */\n     public function edit($id)\n     {\n         $owner = OwnerData::findOrFail($id);\n-        return view('dashboard.OwnderData', compact('owner'));\n+        return view('dashboard.ownderData', compact('owner'));\n     }\n \n     /**\n      * Aggiorna l'owner nel database.\n@@ -93,9 +93,9 @@\n         $owner = OwnerData::findOrFail($id);\n         $owner->fill($validatedData);\n         $owner->save();\n \n-        return redirect()->route('dashboard.OwnderData')->with('success', 'Owner aggiornato con successo.');\n+        return redirect()->route('dashboard.ownderData')->with('success', 'Owner aggiornato con successo.');\n     }\n \n     /**\n      * Rimuove l'owner specificato dal database.\n@@ -107,7 +107,7 @@\n     {\n         $owner = OwnerData::findOrFail($id);\n         $owner->delete();\n \n-        return redirect()->route('dashboard.OwnderData')->with('success', 'Owner eliminato con successo.');\n+        return redirect()->route('dashboard.ownderData')->with('success', 'Owner eliminato con successo.');\n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1719318189359,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n      */\n     public function index()\n     {\n         $ownerData = OwnerData::first(); // Supponendo che ci sia solo un record di owner\n-        return view('dashboard.ownderData', compact('ownerData'));\n+        return view('dashboard.ownerData', compact('ownerData'));\n     }\n \n     /**\n      * Mostra il form per creare un nuovo owner.\n@@ -52,9 +52,9 @@\n         $owner = new OwnerData();\n         $owner->fill($validatedData);\n         $owner->save();\n \n-        return redirect()->route('dashboard.ownderData')->with('success', 'Owner creato con successo.');\n+        return redirect()->route('dashboard.ownerData')->with('success', 'Owner creato con successo.');\n     }\n \n     /**\n      * Mostra il form per modificare l'owner specificato.\n@@ -64,9 +64,9 @@\n      */\n     public function edit($id)\n     {\n         $owner = OwnerData::findOrFail($id);\n-        return view('dashboard.ownderData', compact('owner'));\n+        return view('dashboard.ownerData', compact('owner'));\n     }\n \n     /**\n      * Aggiorna l'owner nel database.\n@@ -93,9 +93,9 @@\n         $owner = OwnerData::findOrFail($id);\n         $owner->fill($validatedData);\n         $owner->save();\n \n-        return redirect()->route('dashboard.ownderData')->with('success', 'Owner aggiornato con successo.');\n+        return redirect()->route('dashboard.ownerData')->with('success', 'Owner aggiornato con successo.');\n     }\n \n     /**\n      * Rimuove l'owner specificato dal database.\n@@ -107,7 +107,7 @@\n     {\n         $owner = OwnerData::findOrFail($id);\n         $owner->delete();\n \n-        return redirect()->route('dashboard.ownderData')->with('success', 'Owner eliminato con successo.');\n+        return redirect()->route('dashboard.ownerData')->with('success', 'Owner eliminato con successo.');\n     }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1719322149645,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n      * @return \\Illuminate\\Http\\Response\n      */\n     public function index()\n     {\n-        $ownerData = OwnerData::first(); // Supponendo che ci sia solo un record di owner\n+        $ownerData = OwnerData::withfirst(); // Supponendo che ci sia solo un record di owner\n         return view('dashboard.ownerData', compact('ownerData'));\n     }\n \n     /**\n"
                },
                {
                    "date": 1719322157348,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n      * @return \\Illuminate\\Http\\Response\n      */\n     public function index()\n     {\n-        $ownerData = OwnerData::withfirst(); // Supponendo che ci sia solo un record di owner\n+        $ownerData = OwnerData::with('images')first(); // Supponendo che ci sia solo un record di owner\n         return view('dashboard.ownerData', compact('ownerData'));\n     }\n \n     /**\n"
                },
                {
                    "date": 1719322162508,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n      * @return \\Illuminate\\Http\\Response\n      */\n     public function index()\n     {\n-        $ownerData = OwnerData::with('images')first(); // Supponendo che ci sia solo un record di owner\n+        $ownerData = OwnerData::with('images')->first(); // Supponendo che ci sia solo un record di owner\n         return view('dashboard.ownerData', compact('ownerData'));\n     }\n \n     /**\n"
                },
                {
                    "date": 1719322189655,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,20 +35,9 @@\n      * @return \\Illuminate\\Http\\Response\n      */\n     public function store(Request $request)\n     {\n-        $validatedData = $request->validate([\n-            'name' => 'required|string|max:255',\n-            'surname' => 'required|string|max:255',\n-            'companyName' => 'nullable|string|max:255',\n-            'address' => 'nullable|string|max:255',\n-            'city' => 'nullable|string|max:255',\n-            'pIva' => 'nullable|string|max:255',\n-            'codFisc' => 'nullable|string|max:255',\n-            'phone' => 'nullable|string|max:255',\n-            'phone2' => 'nullable|string|max:255',\n-            'phone3' => 'nullable|string|max:255',\n-        ]);\n+        \n \n         $owner = new OwnerData();\n         $owner->fill($validatedData);\n         $owner->save();\n"
                },
                {
                    "date": 1719322201270,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,13 +35,19 @@\n      * @return \\Illuminate\\Http\\Response\n      */\n     public function store(Request $request)\n     {\n-        \n+        $partner = Partner::create($request->all());\n \n-        $owner = new OwnerData();\n-        $owner->fill($validatedData);\n-        $owner->save();\n+        if($request->hasFile('images')) {\n+            foreach ($request->file('images') as $file) {\n+                $path = $file->store('images', 'public');\n+                Image::Create([\n+                    'path' => $path,\n+                    'partner_id' => $partner->id,\n+                ]);\n+            }\n+        }\n \n         return redirect()->route('dashboard.ownerData')->with('success', 'Owner creato con successo.');\n     }\n \n"
                },
                {
                    "date": 1719322207665,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,9 +35,9 @@\n      * @return \\Illuminate\\Http\\Response\n      */\n     public function store(Request $request)\n     {\n-        $partner = Partner::create($request->all());\n+        $ownerData = Partner::create($request->all());\n \n         if($request->hasFile('images')) {\n             foreach ($request->file('images') as $file) {\n                 $path = $file->store('images', 'public');\n"
                },
                {
                    "date": 1719322220792,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,11 @@\n <?php\n \n namespace App\\Http\\Controllers;\n \n+use App\\Models\\Image;\n+use App\\Models\\OwnerData;\n use Illuminate\\Http\\Request;\n-use App\\Models\\OwnerData;\n \n class OwnerDataController extends Controller\n {\n     /**\n@@ -35,9 +36,9 @@\n      * @return \\Illuminate\\Http\\Response\n      */\n     public function store(Request $request)\n     {\n-        $ownerData = Partner::create($request->all());\n+        $ownerData = OwnerData::create($request->all());\n \n         if($request->hasFile('images')) {\n             foreach ($request->file('images') as $file) {\n                 $path = $file->store('images', 'public');\n"
                },
                {
                    "date": 1719322232879,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,9 +43,9 @@\n             foreach ($request->file('images') as $file) {\n                 $path = $file->store('images', 'public');\n                 Image::Create([\n                     'path' => $path,\n-                    'partner_id' => $partner->id,\n+                    'own_id' => $partner->id,\n                 ]);\n             }\n         }\n \n"
                },
                {
                    "date": 1719322241668,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,9 +43,9 @@\n             foreach ($request->file('images') as $file) {\n                 $path = $file->store('images', 'public');\n                 Image::Create([\n                     'path' => $path,\n-                    'own_id' => $partner->id,\n+                    'owner_data_id' => $own->id,\n                 ]);\n             }\n         }\n \n"
                },
                {
                    "date": 1719322257169,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,9 +43,9 @@\n             foreach ($request->file('images') as $file) {\n                 $path = $file->store('images', 'public');\n                 Image::Create([\n                     'path' => $path,\n-                    'owner_data_id' => $own->id,\n+                    'owner_data_id' => $ownerData->id,\n                 ]);\n             }\n         }\n \n@@ -72,25 +72,10 @@\n      * @return \\Illuminate\\Http\\Response\n      */\n     public function update(Request $request, $id)\n     {\n-        $validatedData = $request->validate([\n-            'name' => 'required|string|max:255',\n-            'surname' => 'required|string|max:255',\n-            'companyName' => 'nullable|string|max:255',\n-            'address' => 'nullable|string|max:255',\n-            'city' => 'nullable|string|max:255',\n-            'pIva' => 'nullable|string|max:255',\n-            'codFisc' => 'nullable|string|max:255',\n-            'phone' => 'nullable|string|max:255',\n-            'phone2' => 'nullable|string|max:255',\n-            'phone3' => 'nullable|string|max:255',\n-        ]);\n+        \n \n-        $owner = OwnerData::findOrFail($id);\n-        $owner->fill($validatedData);\n-        $owner->save();\n-\n         return redirect()->route('dashboard.ownerData')->with('success', 'Owner aggiornato con successo.');\n     }\n \n     /**\n"
                },
                {
                    "date": 1719322284158,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,9 +73,8 @@\n      */\n     public function update(Request $request, $id)\n     {\n         \n-\n         return redirect()->route('dashboard.ownerData')->with('success', 'Owner aggiornato con successo.');\n     }\n \n     /**\n"
                },
                {
                    "date": 1719322292219,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,8 +72,19 @@\n      * @return \\Illuminate\\Http\\Response\n      */\n     public function update(Request $request, $id)\n     {\n+         $ownerData = OwnerData::create($request->all());\n+\n+        if($request->hasFile('images')) {\n+            foreach ($request->file('images') as $file) {\n+                $path = $file->store('images', 'public');\n+                Image::Create([\n+                    'path' => $path,\n+                    'owner_data_id' => $ownerData->id,\n+                ]);\n+            }\n+        }\n         \n         return redirect()->route('dashboard.ownerData')->with('success', 'Owner aggiornato con successo.');\n     }\n \n"
                },
                {
                    "date": 1719322309374,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,103 @@\n+<?php\n+\n+namespace App\\Http\\Controllers;\n+\n+use App\\Models\\Image;\n+use App\\Models\\OwnerData;\n+use Illuminate\\Http\\Request;\n+\n+class OwnerDataController extends Controller\n+{\n+    /**\n+     * Mostra l'elenco degli owner.\n+     *\n+     * @return \\Illuminate\\Http\\Response\n+     */\n+    public function index()\n+    {\n+        $ownerData = OwnerData::with('images')->first(); // Supponendo che ci sia solo un record di owner\n+        return view('dashboard.ownerData', compact('ownerData'));\n+    }\n+\n+    /**\n+     * Mostra il form per creare un nuovo owner.\n+     *\n+     * @return \\Illuminate\\Http\\Response\n+     */\n+    public function create()\n+    {\n+    }\n+\n+    /**\n+     * Salva il nuovo owner nel database.\n+     *\n+     * @param  \\Illuminate\\Http\\Request  $request\n+     * @return \\Illuminate\\Http\\Response\n+     */\n+    public function store(Request $request)\n+    {\n+        $ownerData = OwnerData::create($request->all());\n+\n+        if ($request->hasFile('images')) {\n+            foreach ($request->file('images') as $file) {\n+                $path = $file->store('images', 'public');\n+                Image::Create([\n+                    'path' => $path,\n+                    'owner_data_id' => $ownerData->id,\n+                ]);\n+            }\n+        }\n+\n+        return redirect()->route('dashboard.ownerData')->with('success', 'Owner creato con successo.');\n+    }\n+\n+    /**\n+     * Mostra il form per modificare l'owner specificato.\n+     *\n+     * @param  int  $id\n+     * @return \\Illuminate\\Http\\Response\n+     */\n+    public function edit($id)\n+    {\n+        $owner = OwnerData::findOrFail($id);\n+        return view('dashboard.ownerData', compact('owner'));\n+    }\n+\n+    /**\n+     * Aggiorna l'owner nel database.\n+     *\n+     * @param  \\Illuminate\\Http\\Request  $request\n+     * @param  int  $id\n+     * @return \\Illuminate\\Http\\Response\n+     */\n+    public function update(Request $request, $id)\n+    {\n+        $ownerData->update($request->all());\n+\n+        if ($request->hasFile('images')) {\n+            foreach ($request->file('images') as $file) {\n+                $path = $file->store('images', 'public');\n+                Image::Create([\n+                    'path' => $path,\n+                    'owner_data_id' => $ownerData->id,\n+                ]);\n+            }\n+        }\n+\n+        return redirect()->route('dashboard.ownerData')->with('success', 'Owner aggiornato con successo.');\n+    }\n+\n+    /**\n+     * Rimuove l'owner specificato dal database.\n+     *\n+     * @param  int  $id\n+     * @return \\Illuminate\\Http\\Response\n+     */\n+    public function destroy($id)\n+    {\n+        $owner = OwnerData::findOrFail($id);\n+        $owner->delete();\n+\n+        return redirect()->route('dashboard.ownerData')->with('success', 'Owner eliminato con successo.');\n+    }\n+}\n"
                },
                {
                    "date": 1719322318794,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,9 +69,9 @@\n      * @param  \\Illuminate\\Http\\Request  $request\n      * @param  int  $id\n      * @return \\Illuminate\\Http\\Response\n      */\n-    public function update(Request $request, $id)\n+    public function update(Request $request, )\n     {\n         $ownerData->update($request->all());\n \n         if ($request->hasFile('images')) {\n@@ -100,108 +100,4 @@\n \n         return redirect()->route('dashboard.ownerData')->with('success', 'Owner eliminato con successo.');\n     }\n }\n-<?php\n-\n-namespace App\\Http\\Controllers;\n-\n-use App\\Models\\Image;\n-use App\\Models\\OwnerData;\n-use Illuminate\\Http\\Request;\n-\n-class OwnerDataController extends Controller\n-{\n-    /**\n-     * Mostra l'elenco degli owner.\n-     *\n-     * @return \\Illuminate\\Http\\Response\n-     */\n-    public function index()\n-    {\n-        $ownerData = OwnerData::with('images')->first(); // Supponendo che ci sia solo un record di owner\n-        return view('dashboard.ownerData', compact('ownerData'));\n-    }\n-\n-    /**\n-     * Mostra il form per creare un nuovo owner.\n-     *\n-     * @return \\Illuminate\\Http\\Response\n-     */\n-    public function create()\n-    {\n-\n-    }\n-\n-    /**\n-     * Salva il nuovo owner nel database.\n-     *\n-     * @param  \\Illuminate\\Http\\Request  $request\n-     * @return \\Illuminate\\Http\\Response\n-     */\n-    public function store(Request $request)\n-    {\n-        $ownerData = OwnerData::create($request->all());\n-\n-        if($request->hasFile('images')) {\n-            foreach ($request->file('images') as $file) {\n-                $path = $file->store('images', 'public');\n-                Image::Create([\n-                    'path' => $path,\n-                    'owner_data_id' => $ownerData->id,\n-                ]);\n-            }\n-        }\n-\n-        return redirect()->route('dashboard.ownerData')->with('success', 'Owner creato con successo.');\n-    }\n-\n-    /**\n-     * Mostra il form per modificare l'owner specificato.\n-     *\n-     * @param  int  $id\n-     * @return \\Illuminate\\Http\\Response\n-     */\n-    public function edit($id)\n-    {\n-        $owner = OwnerData::findOrFail($id);\n-        return view('dashboard.ownerData', compact('owner'));\n-    }\n-\n-    /**\n-     * Aggiorna l'owner nel database.\n-     *\n-     * @param  \\Illuminate\\Http\\Request  $request\n-     * @param  int  $id\n-     * @return \\Illuminate\\Http\\Response\n-     */\n-    public function update(Request $request, $id)\n-    {\n-         $ownerData = OwnerData::create($request->all());\n-\n-        if($request->hasFile('images')) {\n-            foreach ($request->file('images') as $file) {\n-                $path = $file->store('images', 'public');\n-                Image::Create([\n-                    'path' => $path,\n-                    'owner_data_id' => $ownerData->id,\n-                ]);\n-            }\n-        }\n-        \n-        return redirect()->route('dashboard.ownerData')->with('success', 'Owner aggiornato con successo.');\n-    }\n-\n-    /**\n-     * Rimuove l'owner specificato dal database.\n-     *\n-     * @param  int  $id\n-     * @return \\Illuminate\\Http\\Response\n-     */\n-    public function destroy($id)\n-    {\n-        $owner = OwnerData::findOrFail($id);\n-        $owner->delete();\n-\n-        return redirect()->route('dashboard.ownerData')->with('success', 'Owner eliminato con successo.');\n-    }\n-}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1719322324804,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,9 +69,9 @@\n      * @param  \\Illuminate\\Http\\Request  $request\n      * @param  int  $id\n      * @return \\Illuminate\\Http\\Response\n      */\n-    public function update(Request $request, )\n+    public function update(Request $request, OwnerData $)\n     {\n         $ownerData->update($request->all());\n \n         if ($request->hasFile('images')) {\n"
                },
                {
                    "date": 1719322330492,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,103 @@\n+<?php\n+\n+namespace App\\Http\\Controllers;\n+\n+use App\\Models\\Image;\n+use App\\Models\\OwnerData;\n+use Illuminate\\Http\\Request;\n+\n+class OwnerDataController extends Controller\n+{\n+    /**\n+     * Mostra l'elenco degli owner.\n+     *\n+     * @return \\Illuminate\\Http\\Response\n+     */\n+    public function index()\n+    {\n+        $ownerData = OwnerData::with('images')->first(); // Supponendo che ci sia solo un record di owner\n+        return view('dashboard.ownerData', compact('ownerData'));\n+    }\n+\n+    /**\n+     * Mostra il form per creare un nuovo owner.\n+     *\n+     * @return \\Illuminate\\Http\\Response\n+     */\n+    public function create()\n+    {\n+    }\n+\n+    /**\n+     * Salva il nuovo owner nel database.\n+     *\n+     * @param  \\Illuminate\\Http\\Request  $request\n+     * @return \\Illuminate\\Http\\Response\n+     */\n+    public function store(Request $request)\n+    {\n+        $ownerData = OwnerData::create($request->all());\n+\n+        if ($request->hasFile('images')) {\n+            foreach ($request->file('images') as $file) {\n+                $path = $file->store('images', 'public');\n+                Image::Create([\n+                    'path' => $path,\n+                    'owner_data_id' => $ownerData->id,\n+                ]);\n+            }\n+        }\n+\n+        return redirect()->route('dashboard.ownerData')->with('success', 'Owner creato con successo.');\n+    }\n+\n+    /**\n+     * Mostra il form per modificare l'owner specificato.\n+     *\n+     * @param  int  $id\n+     * @return \\Illuminate\\Http\\Response\n+     */\n+    public function edit($id)\n+    {\n+        $owner = OwnerData::findOrFail($id);\n+        return view('dashboard.ownerData', compact('owner'));\n+    }\n+\n+    /**\n+     * Aggiorna l'owner nel database.\n+     *\n+     * @param  \\Illuminate\\Http\\Request  $request\n+     * @param  int  $id\n+     * @return \\Illuminate\\Http\\Response\n+     */\n+    public function update(Request $request, OwnerData $ownerData)\n+    {\n+        $ownerData->update($request->all());\n+\n+        if ($request->hasFile('images')) {\n+            foreach ($request->file('images') as $file) {\n+                $path = $file->store('images', 'public');\n+                Image::Create([\n+                    'path' => $path,\n+                    'owner_data_id' => $ownerData->id,\n+                ]);\n+            }\n+        }\n+\n+        return redirect()->route('dashboard.ownerData')->with('success', 'Owner aggiornato con successo.');\n+    }\n+\n+    /**\n+     * Rimuove l'owner specificato dal database.\n+     *\n+     * @param  int  $id\n+     * @return \\Illuminate\\Http\\Response\n+     */\n+    public function destroy($id)\n+    {\n+        $owner = OwnerData::findOrFail($id);\n+        $owner->delete();\n+\n+        return redirect()->route('dashboard.ownerData')->with('success', 'Owner eliminato con successo.');\n+    }\n+}\n"
                },
                {
                    "date": 1719322354974,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -99,108 +99,6 @@\n         $owner->delete();\n \n         return redirect()->route('dashboard.ownerData')->with('success', 'Owner eliminato con successo.');\n     }\n+    \n }\n-<?php\n-\n-namespace App\\Http\\Controllers;\n-\n-use App\\Models\\Image;\n-use App\\Models\\OwnerData;\n-use Illuminate\\Http\\Request;\n-\n-class OwnerDataController extends Controller\n-{\n-    /**\n-     * Mostra l'elenco degli owner.\n-     *\n-     * @return \\Illuminate\\Http\\Response\n-     */\n-    public function index()\n-    {\n-        $ownerData = OwnerData::with('images')->first(); // Supponendo che ci sia solo un record di owner\n-        return view('dashboard.ownerData', compact('ownerData'));\n-    }\n-\n-    /**\n-     * Mostra il form per creare un nuovo owner.\n-     *\n-     * @return \\Illuminate\\Http\\Response\n-     */\n-    public function create()\n-    {\n-    }\n-\n-    /**\n-     * Salva il nuovo owner nel database.\n-     *\n-     * @param  \\Illuminate\\Http\\Request  $request\n-     * @return \\Illuminate\\Http\\Response\n-     */\n-    public function store(Request $request)\n-    {\n-        $ownerData = OwnerData::create($request->all());\n-\n-        if ($request->hasFile('images')) {\n-            foreach ($request->file('images') as $file) {\n-                $path = $file->store('images', 'public');\n-                Image::Create([\n-                    'path' => $path,\n-                    'owner_data_id' => $ownerData->id,\n-                ]);\n-            }\n-        }\n-\n-        return redirect()->route('dashboard.ownerData')->with('success', 'Owner creato con successo.');\n-    }\n-\n-    /**\n-     * Mostra il form per modificare l'owner specificato.\n-     *\n-     * @param  int  $id\n-     * @return \\Illuminate\\Http\\Response\n-     */\n-    public function edit($id)\n-    {\n-        $owner = OwnerData::findOrFail($id);\n-        return view('dashboard.ownerData', compact('owner'));\n-    }\n-\n-    /**\n-     * Aggiorna l'owner nel database.\n-     *\n-     * @param  \\Illuminate\\Http\\Request  $request\n-     * @param  int  $id\n-     * @return \\Illuminate\\Http\\Response\n-     */\n-    public function update(Request $request, OwnerData $)\n-    {\n-        $ownerData->update($request->all());\n-\n-        if ($request->hasFile('images')) {\n-            foreach ($request->file('images') as $file) {\n-                $path = $file->store('images', 'public');\n-                Image::Create([\n-                    'path' => $path,\n-                    'owner_data_id' => $ownerData->id,\n-                ]);\n-            }\n-        }\n-\n-        return redirect()->route('dashboard.ownerData')->with('success', 'Owner aggiornato con successo.');\n-    }\n-\n-    /**\n-     * Rimuove l'owner specificato dal database.\n-     *\n-     * @param  int  $id\n-     * @return \\Illuminate\\Http\\Response\n-     */\n-    public function destroy($id)\n-    {\n-        $owner = OwnerData::findOrFail($id);\n-        $owner->delete();\n-\n-        return redirect()->route('dashboard.ownerData')->with('success', 'Owner eliminato con successo.');\n-    }\n-}\n"
                },
                {
                    "date": 1719322364448,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,8 +4,9 @@\n \n use App\\Models\\Image;\n use App\\Models\\OwnerData;\n use Illuminate\\Http\\Request;\n+use Illuminate\\Support\\Facades\\Storage;\n \n class OwnerDataController extends Controller\n {\n     /**\n@@ -99,6 +100,18 @@\n         $owner->delete();\n \n         return redirect()->route('dashboard.ownerData')->with('success', 'Owner eliminato con successo.');\n     }\n-    \n+\n+    public function deleteImage($id)\n+    {\n+        $image = Image::find($id);\n+\n+        if ($image) {\n+            Storage::disk('public')->delete($image->path);\n+            $image->delete();\n+            return response()->json(['success' => true]);\n+        }\n+\n+        return response()->json(['success' => false, 'error' => 'Immagine non trovata'], 404);\n+    }\n }\n"
                },
                {
                    "date": 1719325246769,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,10 +59,9 @@\n      * @return \\Illuminate\\Http\\Response\n      */\n     public function edit($id)\n     {\n-        $owner = OwnerData::findOrFail($id);\n-        return view('dashboard.ownerData', compact('owner'));\n+\n     }\n \n     /**\n      * Aggiorna l'owner nel database.\n"
                },
                {
                    "date": 1719326206502,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,9 +37,9 @@\n      */\n     public function store(Request $request)\n     {\n         $ownerData = OwnerData::create($request->all());\n-\n+        \n         if ($request->hasFile('images')) {\n             foreach ($request->file('images') as $file) {\n                 $path = $file->store('images', 'public');\n                 Image::Create([\n"
                },
                {
                    "date": 1719326213688,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,9 +37,9 @@\n      */\n     public function store(Request $request)\n     {\n         $ownerData = OwnerData::create($request->all());\n-        \n+        dd($ownerData);\n         if ($request->hasFile('images')) {\n             foreach ($request->file('images') as $file) {\n                 $path = $file->store('images', 'public');\n                 Image::Create([\n"
                },
                {
                    "date": 1719327184104,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,9 +57,9 @@\n      *\n      * @param  int  $id\n      * @return \\Illuminate\\Http\\Response\n      */\n-    public function edit($id)\n+    public function edit()\n     {\n \n     }\n \n"
                },
                {
                    "date": 1719327202582,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,9 +37,8 @@\n      */\n     public function store(Request $request)\n     {\n         $ownerData = OwnerData::create($request->all());\n-        dd($ownerData);\n         if ($request->hasFile('images')) {\n             foreach ($request->file('images') as $file) {\n                 $path = $file->store('images', 'public');\n                 Image::Create([\n"
                },
                {
                    "date": 1719327214715,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,9 +71,9 @@\n      */\n     public function update(Request $request, OwnerData $ownerData)\n     {\n         $ownerData->update($request->all());\n-\n+        @dd\n         if ($request->hasFile('images')) {\n             foreach ($request->file('images') as $file) {\n                 $path = $file->store('images', 'public');\n                 Image::Create([\n"
                },
                {
                    "date": 1719327220148,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,115 @@\n+<?php\n+\n+namespace App\\Http\\Controllers;\n+\n+use App\\Models\\Image;\n+use App\\Models\\OwnerData;\n+use Illuminate\\Http\\Request;\n+use Illuminate\\Support\\Facades\\Storage;\n+\n+class OwnerDataController extends Controller\n+{\n+    /**\n+     * Mostra l'elenco degli owner.\n+     *\n+     * @return \\Illuminate\\Http\\Response\n+     */\n+    public function index()\n+    {\n+        $ownerData = OwnerData::with('images')->first(); // Supponendo che ci sia solo un record di owner\n+        return view('dashboard.ownerData', compact('ownerData'));\n+    }\n+\n+    /**\n+     * Mostra il form per creare un nuovo owner.\n+     *\n+     * @return \\Illuminate\\Http\\Response\n+     */\n+    public function create()\n+    {\n+    }\n+\n+    /**\n+     * Salva il nuovo owner nel database.\n+     *\n+     * @param  \\Illuminate\\Http\\Request  $request\n+     * @return \\Illuminate\\Http\\Response\n+     */\n+    public function store(Request $request)\n+    {\n+        $ownerData = OwnerData::create($request->all());\n+        if ($request->hasFile('images')) {\n+            foreach ($request->file('images') as $file) {\n+                $path = $file->store('images', 'public');\n+                Image::Create([\n+                    'path' => $path,\n+                    'owner_data_id' => $ownerData->id,\n+                ]);\n+            }\n+        }\n+\n+        return redirect()->route('dashboard.ownerData')->with('success', 'Owner creato con successo.');\n+    }\n+\n+    /**\n+     * Mostra il form per modificare l'owner specificato.\n+     *\n+     * @param  int  $id\n+     * @return \\Illuminate\\Http\\Response\n+     */\n+    public function edit()\n+    {\n+\n+    }\n+\n+    /**\n+     * Aggiorna l'owner nel database.\n+     *\n+     * @param  \\Illuminate\\Http\\Request  $request\n+     * @param  int  $id\n+     * @return \\Illuminate\\Http\\Response\n+     */\n+    public function update(Request $request, OwnerData $ownerData)\n+    {\n+        $ownerData->update($request->all());\n+        dd(ow)\n+        if ($request->hasFile('images')) {\n+            foreach ($request->file('images') as $file) {\n+                $path = $file->store('images', 'public');\n+                Image::Create([\n+                    'path' => $path,\n+                    'owner_data_id' => $ownerData->id,\n+                ]);\n+            }\n+        }\n+\n+        return redirect()->route('dashboard.ownerData')->with('success', 'Owner aggiornato con successo.');\n+    }\n+\n+    /**\n+     * Rimuove l'owner specificato dal database.\n+     *\n+     * @param  int  $id\n+     * @return \\Illuminate\\Http\\Response\n+     */\n+    public function destroy($id)\n+    {\n+        $owner = OwnerData::findOrFail($id);\n+        $owner->delete();\n+\n+        return redirect()->route('dashboard.ownerData')->with('success', 'Owner eliminato con successo.');\n+    }\n+\n+    public function deleteImage($id)\n+    {\n+        $image = Image::find($id);\n+\n+        if ($image) {\n+            Storage::disk('public')->delete($image->path);\n+            $image->delete();\n+            return response()->json(['success' => true]);\n+        }\n+\n+        return response()->json(['success' => false, 'error' => 'Immagine non trovata'], 404);\n+    }\n+}\n"
                },
                {
                    "date": 1719327227697,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,9 +71,9 @@\n      */\n     public function update(Request $request, OwnerData $ownerData)\n     {\n         $ownerData->update($request->all());\n-        dd(ow)\n+        dd($own)\n         if ($request->hasFile('images')) {\n             foreach ($request->file('images') as $file) {\n                 $path = $file->store('images', 'public');\n                 Image::Create([\n@@ -112,119 +112,4 @@\n \n         return response()->json(['success' => false, 'error' => 'Immagine non trovata'], 404);\n     }\n }\n-<?php\n-\n-namespace App\\Http\\Controllers;\n-\n-use App\\Models\\Image;\n-use App\\Models\\OwnerData;\n-use Illuminate\\Http\\Request;\n-use Illuminate\\Support\\Facades\\Storage;\n-\n-class OwnerDataController extends Controller\n-{\n-    /**\n-     * Mostra l'elenco degli owner.\n-     *\n-     * @return \\Illuminate\\Http\\Response\n-     */\n-    public function index()\n-    {\n-        $ownerData = OwnerData::with('images')->first(); // Supponendo che ci sia solo un record di owner\n-        return view('dashboard.ownerData', compact('ownerData'));\n-    }\n-\n-    /**\n-     * Mostra il form per creare un nuovo owner.\n-     *\n-     * @return \\Illuminate\\Http\\Response\n-     */\n-    public function create()\n-    {\n-    }\n-\n-    /**\n-     * Salva il nuovo owner nel database.\n-     *\n-     * @param  \\Illuminate\\Http\\Request  $request\n-     * @return \\Illuminate\\Http\\Response\n-     */\n-    public function store(Request $request)\n-    {\n-        $ownerData = OwnerData::create($request->all());\n-        if ($request->hasFile('images')) {\n-            foreach ($request->file('images') as $file) {\n-                $path = $file->store('images', 'public');\n-                Image::Create([\n-                    'path' => $path,\n-                    'owner_data_id' => $ownerData->id,\n-                ]);\n-            }\n-        }\n-\n-        return redirect()->route('dashboard.ownerData')->with('success', 'Owner creato con successo.');\n-    }\n-\n-    /**\n-     * Mostra il form per modificare l'owner specificato.\n-     *\n-     * @param  int  $id\n-     * @return \\Illuminate\\Http\\Response\n-     */\n-    public function edit()\n-    {\n-\n-    }\n-\n-    /**\n-     * Aggiorna l'owner nel database.\n-     *\n-     * @param  \\Illuminate\\Http\\Request  $request\n-     * @param  int  $id\n-     * @return \\Illuminate\\Http\\Response\n-     */\n-    public function update(Request $request, OwnerData $ownerData)\n-    {\n-        $ownerData->update($request->all());\n-        @dd\n-        if ($request->hasFile('images')) {\n-            foreach ($request->file('images') as $file) {\n-                $path = $file->store('images', 'public');\n-                Image::Create([\n-                    'path' => $path,\n-                    'owner_data_id' => $ownerData->id,\n-                ]);\n-            }\n-        }\n-\n-        return redirect()->route('dashboard.ownerData')->with('success', 'Owner aggiornato con successo.');\n-    }\n-\n-    /**\n-     * Rimuove l'owner specificato dal database.\n-     *\n-     * @param  int  $id\n-     * @return \\Illuminate\\Http\\Response\n-     */\n-    public function destroy($id)\n-    {\n-        $owner = OwnerData::findOrFail($id);\n-        $owner->delete();\n-\n-        return redirect()->route('dashboard.ownerData')->with('success', 'Owner eliminato con successo.');\n-    }\n-\n-    public function deleteImage($id)\n-    {\n-        $image = Image::find($id);\n-\n-        if ($image) {\n-            Storage::disk('public')->delete($image->path);\n-            $image->delete();\n-            return response()->json(['success' => true]);\n-        }\n-\n-        return response()->json(['success' => false, 'error' => 'Immagine non trovata'], 404);\n-    }\n-}\n"
                },
                {
                    "date": 1719327353845,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,9 +71,9 @@\n      */\n     public function update(Request $request, OwnerData $ownerData)\n     {\n         $ownerData->update($request->all());\n-        dd($own)\n+\n         if ($request->hasFile('images')) {\n             foreach ($request->file('images') as $file) {\n                 $path = $file->store('images', 'public');\n                 Image::Create([\n"
                },
                {
                    "date": 1719327369253,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,9 +71,9 @@\n      */\n     public function update(Request $request, OwnerData $ownerData)\n     {\n         $ownerData->update($request->all());\n-\n+        \n         if ($request->hasFile('images')) {\n             foreach ($request->file('images') as $file) {\n                 $path = $file->store('images', 'public');\n                 Image::Create([\n"
                },
                {
                    "date": 1719327374953,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,115 @@\n+<?php\n+\n+namespace App\\Http\\Controllers;\n+\n+use App\\Models\\Image;\n+use App\\Models\\OwnerData;\n+use Illuminate\\Http\\Request;\n+use Illuminate\\Support\\Facades\\Storage;\n+\n+class OwnerDataController extends Controller\n+{\n+    /**\n+     * Mostra l'elenco degli owner.\n+     *\n+     * @return \\Illuminate\\Http\\Response\n+     */\n+    public function index()\n+    {\n+        $ownerData = OwnerData::with('images')->first(); // Supponendo che ci sia solo un record di owner\n+        return view('dashboard.ownerData', compact('ownerData'));\n+    }\n+\n+    /**\n+     * Mostra il form per creare un nuovo owner.\n+     *\n+     * @return \\Illuminate\\Http\\Response\n+     */\n+    public function create()\n+    {\n+    }\n+\n+    /**\n+     * Salva il nuovo owner nel database.\n+     *\n+     * @param  \\Illuminate\\Http\\Request  $request\n+     * @return \\Illuminate\\Http\\Response\n+     */\n+    public function store(Request $request)\n+    {\n+        $ownerData = OwnerData::create($request->all());\n+        if ($request->hasFile('images')) {\n+            foreach ($request->file('images') as $file) {\n+                $path = $file->store('images', 'public');\n+                Image::Create([\n+                    'path' => $path,\n+                    'owner_data_id' => $ownerData->id,\n+                ]);\n+            }\n+        }\n+\n+        return redirect()->route('dashboard.ownerData')->with('success', 'Owner creato con successo.');\n+    }\n+\n+    /**\n+     * Mostra il form per modificare l'owner specificato.\n+     *\n+     * @param  int  $id\n+     * @return \\Illuminate\\Http\\Response\n+     */\n+    public function edit()\n+    {\n+\n+    }\n+\n+    /**\n+     * Aggiorna l'owner nel database.\n+     *\n+     * @param  \\Illuminate\\Http\\Request  $request\n+     * @param  int  $id\n+     * @return \\Illuminate\\Http\\Response\n+     */\n+    public function update(Request $request, OwnerData $ownerData)\n+    {\n+        $ownerData->update($request->all());\n+        dd($ownerData->id);\n+        if ($request->hasFile('images')) {\n+            foreach ($request->file('images') as $file) {\n+                $path = $file->store('images', 'public');\n+                Image::Create([\n+                    'path' => $path,\n+                    'owner_data_id' => $ownerData->id,\n+                ]);\n+            }\n+        }\n+\n+        return redirect()->route('dashboard.ownerData')->with('success', 'Owner aggiornato con successo.');\n+    }\n+\n+    /**\n+     * Rimuove l'owner specificato dal database.\n+     *\n+     * @param  int  $id\n+     * @return \\Illuminate\\Http\\Response\n+     */\n+    public function destroy($id)\n+    {\n+        $owner = OwnerData::findOrFail($id);\n+        $owner->delete();\n+\n+        return redirect()->route('dashboard.ownerData')->with('success', 'Owner eliminato con successo.');\n+    }\n+\n+    public function deleteImage($id)\n+    {\n+        $image = Image::find($id);\n+\n+        if ($image) {\n+            Storage::disk('public')->delete($image->path);\n+            $image->delete();\n+            return response()->json(['success' => true]);\n+        }\n+\n+        return response()->json(['success' => false, 'error' => 'Immagine non trovata'], 404);\n+    }\n+}\n"
                },
                {
                    "date": 1719327588251,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,9 +71,9 @@\n      */\n     public function update(Request $request, OwnerData $ownerData)\n     {\n         $ownerData->update($request->all());\n-        dd($ownerData->id);\n+        // dd($ownerData->id);\n         if ($request->hasFile('images')) {\n             foreach ($request->file('images') as $file) {\n                 $path = $file->store('images', 'public');\n                 Image::Create([\n@@ -112,119 +112,4 @@\n \n         return response()->json(['success' => false, 'error' => 'Immagine non trovata'], 404);\n     }\n }\n-<?php\n-\n-namespace App\\Http\\Controllers;\n-\n-use App\\Models\\Image;\n-use App\\Models\\OwnerData;\n-use Illuminate\\Http\\Request;\n-use Illuminate\\Support\\Facades\\Storage;\n-\n-class OwnerDataController extends Controller\n-{\n-    /**\n-     * Mostra l'elenco degli owner.\n-     *\n-     * @return \\Illuminate\\Http\\Response\n-     */\n-    public function index()\n-    {\n-        $ownerData = OwnerData::with('images')->first(); // Supponendo che ci sia solo un record di owner\n-        return view('dashboard.ownerData', compact('ownerData'));\n-    }\n-\n-    /**\n-     * Mostra il form per creare un nuovo owner.\n-     *\n-     * @return \\Illuminate\\Http\\Response\n-     */\n-    public function create()\n-    {\n-    }\n-\n-    /**\n-     * Salva il nuovo owner nel database.\n-     *\n-     * @param  \\Illuminate\\Http\\Request  $request\n-     * @return \\Illuminate\\Http\\Response\n-     */\n-    public function store(Request $request)\n-    {\n-        $ownerData = OwnerData::create($request->all());\n-        if ($request->hasFile('images')) {\n-            foreach ($request->file('images') as $file) {\n-                $path = $file->store('images', 'public');\n-                Image::Create([\n-                    'path' => $path,\n-                    'owner_data_id' => $ownerData->id,\n-                ]);\n-            }\n-        }\n-\n-        return redirect()->route('dashboard.ownerData')->with('success', 'Owner creato con successo.');\n-    }\n-\n-    /**\n-     * Mostra il form per modificare l'owner specificato.\n-     *\n-     * @param  int  $id\n-     * @return \\Illuminate\\Http\\Response\n-     */\n-    public function edit()\n-    {\n-\n-    }\n-\n-    /**\n-     * Aggiorna l'owner nel database.\n-     *\n-     * @param  \\Illuminate\\Http\\Request  $request\n-     * @param  int  $id\n-     * @return \\Illuminate\\Http\\Response\n-     */\n-    public function update(Request $request, OwnerData $ownerData)\n-    {\n-        $ownerData->update($request->all());\n-        \n-        if ($request->hasFile('images')) {\n-            foreach ($request->file('images') as $file) {\n-                $path = $file->store('images', 'public');\n-                Image::Create([\n-                    'path' => $path,\n-                    'owner_data_id' => $ownerData->id,\n-                ]);\n-            }\n-        }\n-\n-        return redirect()->route('dashboard.ownerData')->with('success', 'Owner aggiornato con successo.');\n-    }\n-\n-    /**\n-     * Rimuove l'owner specificato dal database.\n-     *\n-     * @param  int  $id\n-     * @return \\Illuminate\\Http\\Response\n-     */\n-    public function destroy($id)\n-    {\n-        $owner = OwnerData::findOrFail($id);\n-        $owner->delete();\n-\n-        return redirect()->route('dashboard.ownerData')->with('success', 'Owner eliminato con successo.');\n-    }\n-\n-    public function deleteImage($id)\n-    {\n-        $image = Image::find($id);\n-\n-        if ($image) {\n-            Storage::disk('public')->delete($image->path);\n-            $image->delete();\n-            return response()->json(['success' => true]);\n-        }\n-\n-        return response()->json(['success' => false, 'error' => 'Immagine non trovata'], 404);\n-    }\n-}\n"
                }
            ],
            "date": 1719315021811,
            "name": "Commit-0",
            "content": "<?php\n\nnamespace App\\Http\\Controllers;\n\nuse App\\Models\\OwnerData;\nuse Illuminate\\Http\\Request;\n\nclass OwnerDataController extends Controller\n{\n    /**\n     * Display a listing of the resource.\n     */\n    public function index()\n    {\n        \n    }\n\n    /**\n     * Show the form for creating a new resource.\n     */\n    public function create()\n    {\n        //\n    }\n\n    /**\n     * Store a newly created resource in storage.\n     */\n    public function store(Request $request)\n    {\n        //\n    }\n\n    /**\n     * Display the specified resource.\n     */\n    public function show(OwnerData $ownerData)\n    {\n        //\n    }\n\n    /**\n     * Show the form for editing the specified resource.\n     */\n    public function edit(OwnerData $ownerData)\n    {\n        //\n    }\n\n    /**\n     * Update the specified resource in storage.\n     */\n    public function update(Request $request, OwnerData $ownerData)\n    {\n        //\n    }\n\n    /**\n     * Remove the specified resource from storage.\n     */\n    public function destroy(OwnerData $ownerData)\n    {\n        //\n    }\n}\n"
        }
    ]
}